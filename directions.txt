- https://www.cs.purdue.edu/homes/grr/SystemsProgrammingBook/Book/Chapter5-WritingYourOwnShell.pdf
- https://gitlab.com/madebypixel02/minishell

#to do#
- make stuff from lexer.c into new struct so we can "parse" to exec
- make signanls for ctrl c d \ work
- if fullpath isnt given , make txt token into fullpath


- pipex is changed in 4 different ways, try to make 1 that still used pathfinding.
- change pipex/pipex related stuff where it accepts the new exec struct

- make a bunch of error handling when inpropper stuff is parsed
- when multiple infiles or outfiles are given only use the first and last # ----- # wrong
- handle the stuff before parsing to pipex, when theres only 1 cmd, multiple in/outfile etc
- at the end change this shit #include "../include/minishell.h" 


- add function that cleans up input (like pipe_parsing used to-) OR change pipex that it does stuff based on the tokens passed.
- orhan bothered me and I forgot what I was putting here

- maybe ? change input ** in shell struct to hold an actual array of pointers instead of just being a pointer to a pointer so index can be used? (not really needed)
- stuff like "" " "" can happen? ask others for stuff that will break our program

#rowan#
- if fullpath isnt given , make txt token into fullpath
- make stuff from lexer.c into new struct so we can "parse" to exec
- clean up new code (norm)


#nils#
- make signanls for ctrl c d \ work
- make stuff from lexer.c into new struct so we can "parse" to exec

#external functions#

readline, rl_clear_history, rl_on_new_line,
rl_replace_line, rl_redisplay, add_history,
printf, malloc, free, write, access, open, read,
close, fork, wait, waitpid, wait3, wait4, signal,
sigaction, sigemptyset, sigaddset, kill, exit,
getcwd, chdir, stat, lstat, fstat, unlink, execve,
dup, dup2, pipe, opendir, readdir, closedir,
strerror, perror, isatty, ttyname, ttyslot, ioctl,
getenv, tcsetattr, tcgetattr, tgetent, tgetflag,
tgetnum, tgetstr, tgoto, tputs